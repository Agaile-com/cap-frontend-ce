{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/api/[..._path]/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\n\nexport const runtime = \"edge\";\n\nfunction getCorsHeaders() {\n  return {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Methods\": \"GET, POST, PUT, PATCH, DELETE, OPTIONS\",\n    \"Access-Control-Allow-Headers\": \"*\",\n  };\n}\n\nasync function handleRequest(req: NextRequest, method: string) {\n  try {\n    const path = req.nextUrl.pathname.replace(/^\\/?api\\//, \"\");\n    const url = new URL(req.url);\n    const searchParams = new URLSearchParams(url.search);\n    searchParams.delete(\"_path\");\n    searchParams.delete(\"nxtP_path\");\n    const queryString = searchParams.toString()\n      ? `?${searchParams.toString()}`\n      : \"\";\n\n    const options: RequestInit = {\n      method,\n      headers: {\n        \"x-api-key\": process.env[\"LANGCHAIN_API_KEY\"] || \"\",\n      },\n    };\n\n    if ([\"POST\", \"PUT\", \"PATCH\"].includes(method)) {\n      options.body = await req.text();\n    }\n\n    console.log({ url, path, queryString, options });\n\n    const res = await fetch(\n      `${process.env[\"LANGGRAPH_API_URL\"]}/${path}${queryString}`,\n      options\n    );\n\n    return new NextResponse(res.body, {\n      status: res.status,\n      statusText: res.statusText,\n      headers: {\n        ...res.headers,\n        ...getCorsHeaders(),\n      },\n    });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  } catch (e: any) {\n    return NextResponse.json({ error: e.message }, { status: e.status ?? 500 });\n  }\n}\n\nexport const GET = (req: NextRequest) => handleRequest(req, \"GET\");\nexport const POST = (req: NextRequest) => handleRequest(req, \"POST\");\nexport const PUT = (req: NextRequest) => handleRequest(req, \"PUT\");\nexport const PATCH = (req: NextRequest) => handleRequest(req, \"PATCH\");\nexport const DELETE = (req: NextRequest) => handleRequest(req, \"DELETE\");\n\n// Add a new OPTIONS handler\nexport const OPTIONS = () => {\n  return new NextResponse(null, {\n    status: 204,\n    headers: {\n      ...getCorsHeaders(),\n    },\n  });\n};\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAAA;;AAEO,MAAM,UAAU;AAEvB,SAAS;IACP,OAAO;QACL,+BAA+B;QAC/B,gCAAgC;QAChC,gCAAgC;IAClC;AACF;AAEA,eAAe,cAAc,GAAgB,EAAE,MAAc;IAC3D,IAAI;QACF,MAAM,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa;QACvD,MAAM,MAAM,IAAI,IAAI,IAAI,GAAG;QAC3B,MAAM,eAAe,IAAI,gBAAgB,IAAI,MAAM;QACnD,aAAa,MAAM,CAAC;QACpB,aAAa,MAAM,CAAC;QACpB,MAAM,cAAc,aAAa,QAAQ,KACrC,CAAC,CAAC,EAAE,aAAa,QAAQ,IAAI,GAC7B;QAEJ,MAAM,UAAuB;YAC3B;YACA,SAAS;gBACP,aAAa,QAAQ,GAAG,CAAC,oBAAoB,IAAI;YACnD;QACF;QAEA,IAAI;YAAC;YAAQ;YAAO;SAAQ,CAAC,QAAQ,CAAC,SAAS;YAC7C,QAAQ,IAAI,GAAG,MAAM,IAAI,IAAI;QAC/B;QAEA,QAAQ,GAAG,CAAC;YAAE;YAAK;YAAM;YAAa;QAAQ;QAE9C,MAAM,MAAM,MAAM,MAChB,GAAG,QAAQ,GAAG,CAAC,oBAAoB,CAAC,CAAC,EAAE,OAAO,aAAa,EAC3D;QAGF,OAAO,IAAI,+LAAA,CAAA,eAAY,CAAC,IAAI,IAAI,EAAE;YAChC,QAAQ,IAAI,MAAM;YAClB,YAAY,IAAI,UAAU;YAC1B,SAAS;gBACP,GAAG,IAAI,OAAO;gBACd,GAAG,gBAAgB;YACrB;QACF;IACA,8DAA8D;IAChE,EAAE,OAAO,GAAQ;QACf,OAAO,+LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,EAAE,OAAO;QAAC,GAAG;YAAE,QAAQ,EAAE,MAAM,IAAI;QAAI;IAC3E;AACF;AAEO,MAAM,MAAM,CAAC,MAAqB,cAAc,KAAK;AACrD,MAAM,OAAO,CAAC,MAAqB,cAAc,KAAK;AACtD,MAAM,MAAM,CAAC,MAAqB,cAAc,KAAK;AACrD,MAAM,QAAQ,CAAC,MAAqB,cAAc,KAAK;AACvD,MAAM,SAAS,CAAC,MAAqB,cAAc,KAAK;AAGxD,MAAM,UAAU;IACrB,OAAO,IAAI,+LAAA,CAAA,eAAY,CAAC,MAAM;QAC5B,QAAQ;QACR,SAAS;YACP,GAAG,gBAAgB;QACrB;IACF;AACF"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}